// Prisma schema for meeting attendance app with Outlook sync
// PostgreSQL database

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  manager
  employee
}

enum MeetingType {
  team_meeting
  project_review
  client_call
  one_on_one
  training
  all_hands
}

enum AttendanceStatus {
  present
  absent
  late
}

enum MeetingStatus {
  scheduled
  in_progress
  completed
  cancelled
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  fullName    String
  department  String?
  role        UserRole @default(employee)
  isActive    Boolean  @default(true)
  password    String?  // For manual login (hashed)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  meetings    Meeting[] @relation("OrganizerMeetings")
  attendances MeetingAttendee[]
}

model Meeting {
  id             String         @id @default(uuid())
  outlookEventId String?        @unique
  title          String
  description    String?
  startTime      DateTime
  endTime        DateTime
  location       String?
  organizer      User?   @relation("OrganizerMeetings", fields: [organizerId], references: [id])
  organizerId    String?
  meetingType    MeetingType    @default(team_meeting)
  meetingStatus  MeetingStatus  @default(scheduled)
  isRecurring    Boolean        @default(false)
  maxAttendees   Int?
  companyDomain  String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  attendees      MeetingAttendee[]
  guestAttendees GuestAttendee[]
}

model MeetingAttendee {
  id              String         @id @default(uuid())
  meeting         Meeting        @relation(fields: [meetingId], references: [id])
  meetingId       String
  user            User    @relation(fields: [userId], references: [id])
  userId          String
  attendanceStatus AttendanceStatus?
  joinedAt        DateTime?
  leftAt          DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@unique([meetingId, userId])
}

model GuestAttendee {
  id         String   @id @default(uuid())
  meeting    Meeting  @relation(fields: [meetingId], references: [id])
  meetingId  String
  name       String
  email      String
  company    String?
  checkedInAt DateTime @default(now())
}

model Department {
  id          String   @id @default(uuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
}
